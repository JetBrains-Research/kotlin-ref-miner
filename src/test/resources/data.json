[
    {
        "repository": "https://github.com/JetBrains-Research/kotlin-refactoring-samples.git",
        "sha1": "38448785791cffce8c453b04bcc3e217bb41f1e8",
        "refactorings": [
            {
                "description": "Rename Class shapes.BaseShape renamed to shapes.Shape"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains-Research/kotlin-refactoring-samples.git",
        "sha1": "e839b0b7df4c4069515e695b9ab088c675522aac",
        "refactorings": [
            {
                "description": "Move Class shapes.Point moved to Point"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains-Research/kotlin-refactoring-samples.git",
        "sha1": "a62a22b34cffda8733140a9e8b654b224def656c",
        "refactorings": [
            {
                "description": "Add Parameter shape : Shape in method public containsPoint(point Point, shape Shape) from class shapes.Rectangle"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains-Research/kotlin-refactoring-samples.git",
        "sha1": "7bdbbfa25c164d7071aec044acb4f5199a4b927c",
        "refactorings": [
            {
                "description": "Remove Parameter shape : Shape in method public containsPoint(point Point, shape Shape) from class shapes.Rectangle"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains-Research/kotlin-refactoring-samples.git",
        "sha1": "b7fec8bacc7e10044ca8fbc85dc13264d1d894f9",
        "refactorings": [
            {
                "description": "Rename Method public getCoordinate() : String renamed to public getCoordinates() : String in class Point"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains-Research/codetracker.git",
        "sha1": "0b6035254b55d010f22ef0bfde894cded906178e",
        "refactorings": [
            {
                "description": "Rename Class org.jetbrains.research.ml.codetracker.ui.panes.TaskController renamed to org.jetbrains.research.ml.codetracker.ui.panes.TaskSolvingController"
            },
            {
                "description": "Rename Class org.jetbrains.research.ml.codetracker.ui.panes.TaskControllerManager renamed to org.jetbrains.research.ml.codetracker.ui.panes.TaskSolvingControllerManager"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains-Research/codetracker.git",
        "sha1": "e818280cae22dcee954baad9980b35c0b61776c3",
        "refactorings": [
            {
                "description": "Rename Class org.jetbrains.research.ml.codetracker.ui.panes.CountryListNotifier renamed to org.jetbrains.research.ml.codetracker.ui.panes.CountryComparatorNotifier"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains-Research/codetracker.git",
        "sha1": "3fb9d8b408ac0d7e931333f25cdadc10bc1926b7",
        "refactorings": [
            {
                "description": "Add Parameter deleteAfter : Boolean in method public sendTrackingData(file File, deleteAfter Boolean) from class Server"
            },
            {
                "description": "Add Parameter deleteAfter : Boolean in method public sendTrackingData(file File, deleteAfter Boolean) from class PluginServer"
            },
            {
                "description": "Rename Class DocumentLogger renamed to DocumentLogger"
            },
            {
                "description": "Remove Parameter project : Project in method public startTracking(project Project) from class Plugin"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains-Research/codetracker.git",
        "sha1": "e818280cae22dcee954baad9980b35c0b61776c3",
        "refactorings": [
            {
                "description": "Rename Class org.jetbrains.research.ml.codetracker.ui.panes.CountryListNotifier renamed to org.jetbrains.research.ml.codetracker.ui.panes.CountryComparatorNotifier"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains-Research/codetracker.git",
        "sha1": "bd73697521f58d0c1d91d81d9747b65617aa986f",
        "refactorings": [
            {
                "description": "Add Parameter currentFileType : FileTypes in method private sendDataToServer(request Request, currentFileType FileTypes) : CompletableFuture<Void> from class PluginServer"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains-Research/codetracker.git",
        "sha1": "0d8728b310668daf7af510e74315556b4eb23a60",
        "refactorings": [
            {
                "description": "Rename Method private createFile(project Project, task Task, language Language) : VirtualFile? renamed to private getOrCreateFile(project Project, task Task, language Language) : VirtualFile? in class org.jetbrains.research.ml.codetracker.tracking.TaskFileHandler"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains-Research/codetracker.git",
        "sha1": "703d6d2e874eaed2e5bd0808def0c6e5237ef97c",
        "refactorings": [
            {
                "description": "Remove Parameter postActivity : () -> Unit in method public sendCodeTrackerData(file File, deleteAfter () -> Boolean, postActivity () -> Unit) from class org.jetbrains.research.ml.codetracker.server.TrackerQueryExecutor"
            },
            {
                "description": "Remove Parameter deleteAfter : () -> Boolean in method public sendCodeTrackerData(file File, deleteAfter () -> Boolean, postActivity () -> Unit) from class org.jetbrains.research.ml.codetracker.server.TrackerQueryExecutor"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains-Research/codetracker.git",
        "sha1": "49ad7099a7715347f4636a868ecd5c70c74df85f",
        "refactorings": [
            {
                "description": "Rename Method public getAvailableLanguages() : List<PaneLanguage> renamed to private findAvailableLanguages() : List<PaneLanguage> in class org.jetbrains.research.ml.codetracker.server.PluginServer"
            },
            {
                "description": "Rename Method public getPaneText() : PaneText? renamed to private findPaneText() : PaneText in class org.jetbrains.research.ml.codetracker.server.PluginServer"
            },
            {
                "description": "Rename Method public getCountries() : List<Country> renamed to private findCountries() : List<Country> in class org.jetbrains.research.ml.codetracker.server.PluginServer"
            },
            {
                "description": "Rename Method public getGenders() : List<Gender> renamed to private findGenders() : List<Gender> in class org.jetbrains.research.ml.codetracker.server.PluginServer"
            },
            {
                "description": "Rename Method public getTasks() : List<Task> renamed to private findTasks() : List<Task> in class org.jetbrains.research.ml.codetracker.server.PluginServer"
            },
            {
                "description": "Remove Parameter name : String in method public makeTranslatable(name String, translate (PaneLanguage) -> Unit) from class TranslationManager.kt"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains-Research/kotlin-refactoring-samples.git",
        "sha1": "4166aa06dbcf055f73cdb6ebae20afbaec3b952d",
        "refactorings": [
            {
                "description": "Reorder Parameter [point : Point, shape : Shape] to [shape : Shape, point : Point] in method public containsPoint(shape Shape, point Point) in class shapes.Rectangle"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains/lets-plot.git",
        "sha1": "11d3dcecf923a41c716fb100b5f283bf8d96a3ee",
        "refactorings": [
            {
                "description": "Move Method public defaultOutlierTooltips() from class jetbrains.datalore.plot.builder.tooltip.TooltipContentGeneratorTest to public defaultOutlierTooltips() from class jetbrains.datalore.plot.config.TooltipConfigTest"
            },
            {
                "description": "Move And Rename Method public userOutlierTooltips() from class jetbrains.datalore.plot.builder.tooltip.TooltipContentGeneratorTest to public configOutlierTooltips() from class jetbrains.datalore.plot.config.TooltipConfigTest"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains/lets-plot.git",
        "sha1": "71222b81fc9401f18d1002677060851e74a75a49",
        "refactorings": [
            {
                "description": "Move Method private createHiddenAesList(geomKind GeomKind) : List<Aes<*>> from class jetbrains.datalore.plot.config.PlotConfigClientSideUtil to private createHiddenAesList(geomKind GeomKind) : List<Aes<*>> from class jetbrains.datalore.plot.config.GeomInteractionUtil"
            },
            {
                "description": "Add Parameter geomInteraction : GeomInteraction in method private createLayerBuilder(layerConfig LayerConfig, scaleProvidersMap TypedScaleProviderMap, geomInteraction GeomInteraction) : GeomLayerBuilder from class jetbrains.datalore.plot.config.PlotConfigClientSideUtil"
            },
            {
                "description": "Move Method private createTooltipValueSourceList(tooltipLineSpecifications List<TooltipLineSpecification>) : List<ValueSource> from class jetbrains.datalore.plot.config.PlotConfigClientSideUtil to private createTooltipValueSourceList(tooltipLineSpecifications List<TooltipLineSpecification>) : List<ValueSource> from class jetbrains.datalore.plot.config.GeomInteractionUtil"
            },
            {
                "description": "Move Method private initGeomInteractionBuilder(renders List<Aes<*>>, geomKind GeomKind, statKind StatKind) : GeomInteractionBuilder from class jetbrains.datalore.plot.config.PlotConfigClientSideUtil to private initGeomInteractionBuilder(renders List<Aes<*>>, geomKind GeomKind, statKind StatKind) : GeomInteractionBuilder from class jetbrains.datalore.plot.config.GeomInteractionUtil"
            },
            {
                "description": "Move Method private createTooltipAesList(layerConfig LayerConfig, axisAes List<Aes<*>>) : List<Aes<*>> from class jetbrains.datalore.plot.config.PlotConfigClientSideUtil to private createTooltipAesList(layerConfig LayerConfig, axisAes List<Aes<*>>) : List<Aes<*>> from class jetbrains.datalore.plot.config.GeomInteractionUtil"
            },
            {
                "description": "Move Method internal createGeomInteractionBuilder(renders List<Aes<*>>, geomKind GeomKind, statKind StatKind, multilayer Boolean) : GeomInteractionBuilder from class jetbrains.datalore.plot.config.PlotConfigClientSideUtil to private createGeomInteractionBuilder(renders List<Aes<*>>, geomKind GeomKind, statKind StatKind, multilayer Boolean) : GeomInteractionBuilder from class jetbrains.datalore.plot.config.GeomInteractionUtil"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains/lets-plot.git",
        "sha1": "ce848440fa62a7730d1e9e779eed0f10b7adf633",
        "refactorings": [
            {
                "description": "Add Parameter messageConsumer : (s: String) -> Unit in method public apply(data DataFrame, statCtx StatContext, messageConsumer (s: String) -> Unit) : DataFrame from class jetbrains.datalore.plot.base.stat.CountStat"
            },
            {
                "description": "Add Parameter messageConsumer : (s: String) -> Unit in method public apply(data DataFrame, statCtx StatContext, messageConsumer (s: String) -> Unit) : DataFrame from class jetbrains.datalore.plot.base.stat.SmoothStat"
            },
            {
                "description": "Add Parameter messageConsumer : (s: String) -> Unit in method public apply(data DataFrame, statCtx StatContext, messageConsumer (s: String) -> Unit) : DataFrame from class jetbrains.datalore.plot.base.stat.Density2dStat"
            },
            {
                "description": "Move Method public sampleWithoutReplacement(popSize Int, sampleSize Int, rand Random, onPick (Set<Int>) -> T, onDrop (Set<Int>) -> T) : T from class jetbrains.datalore.plot.builder.sampling.method.SamplingUtil to public sampleWithoutReplacement(popSize Int, sampleSize Int, rand Random, onPick (Set<Int>) -> T, onDrop (Set<Int>) -> T) : T from class jetbrains.datalore.plot.base.util.SamplingUtil"
            },
            {
                "description": "Add Parameter messageConsumer : (s: String) -> Unit in method public apply(data DataFrame, statCtx StatContext, messageConsumer (s: String) -> Unit) : DataFrame from class jetbrains.datalore.plot.base.stat.ContourfStat"
            },
            {
                "description": "Add Parameter messageConsumer : (s: String) -> Unit in method public apply(data DataFrame, statCtx StatContext, messageConsumer (s: String) -> Unit) : DataFrame from class jetbrains.datalore.plot.base.stat.AbstractDensity2dStat"
            },
            {
                "description": "Add Parameter messageConsumer : (s: String) -> Unit in method public apply(data DataFrame, statCtx StatContext, messageConsumer (s: String) -> Unit) : DataFrame from class jetbrains.datalore.plot.base.stat.Density2dfStat"
            },
            {
                "description": "Add Parameter messageConsumer : (s: String) -> Unit in method public apply(data DataFrame, statCtx StatContext, messageConsumer (s: String) -> Unit) : DataFrame from class jetbrains.datalore.plot.base.stat.BoxplotStat"
            },
            {
                "description": "Add Parameter messageConsumer : (s: String) -> Unit in method public apply(data DataFrame, statCtx StatContext, messageConsumer (s: String) -> Unit) : DataFrame from class jetbrains.datalore.plot.base.stat.ContourStat"
            },
            {
                "description": "Add Parameter messageConsumer : (s: String) -> Unit in method public apply(data DataFrame, statCtx StatContext, messageConsumer (s: String) -> Unit) : DataFrame from class jetbrains.datalore.plot.base.Stat"
            },
            {
                "description": "Add Parameter messageConsumer : (s: String) -> Unit in method public apply(data DataFrame, statCtx StatContext, messageConsumer (s: String) -> Unit) : DataFrame from class jetbrains.datalore.plot.base.stat.DensityStat"
            },
            {
                "description": "Add Parameter messageConsumer : Consumer<String> in method public buildStatData(data DataFrame, stat Stat, bindings List<VarBinding>, groupingContext GroupingContext, facetXVar String?, facetYVar String?, statCtx StatContext, messageConsumer Consumer<String>) : DataAndGroupingContext from class jetbrains.datalore.plot.builder.data.DataProcessing"
            },
            {
                "description": "Add Parameter messageConsumer : (s: String) -> Unit in method public apply(data DataFrame, statCtx StatContext, messageConsumer (s: String) -> Unit) : DataFrame from class jetbrains.datalore.plot.base.stat.BinStat"
            },
            {
                "description": "Add Parameter compMessageConsumer : Consumer<String> in method private applyStat(data DataFrame, stat Stat, bindings List<VarBinding>, facetXVarName String?, facetYVarName String?, statCtx StatContext, compMessageConsumer Consumer<String>) : DataFrame from class jetbrains.datalore.plot.builder.data.DataProcessing"
            },
            {
                "description": "Add Parameter messageConsumer : (s: String) -> Unit in method public apply(data DataFrame, statCtx StatContext, messageConsumer (s: String) -> Unit) : DataFrame from class jetbrains.datalore.plot.base.stat.Bin2dStat"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains-Research/kotlin-refactoring-samples.git",
        "sha1": "67c0bfffc84088dcdbb88a2b7bcc90aec3e764a9",
        "refactorings": [
            {
                "description": "Pull Up Method public getDescription() : String from class shapes.Square to public getDescription() : String from class shapes.Rectangle"
            }
        ]
    },
    {
        "repository": "https://github.com/JetBrains-Research/kotlin-refactoring-samples.git",
        "sha1": "1a29b2b054ee6593bf9a262cbdb7e0a9b33283a8",
        "refactorings": [
            {
                "description": "Push Down Method public getDescription() : String from class shapes.Rectangle to public getDescription() : String from class shapes.Square"
            }
        ]
    }
]
